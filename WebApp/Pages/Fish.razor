@page "/fish"

<div class="fish-game-container">
    <h2 class="game-title">Guess the Fish</h2>

    <div class="fish-image-container">
        <img src="@fishImage" alt="Fish Image" class="fish-image" />
    </div>

    <p class="instruction-text">Select the correct name for the fish below:</p>

    @if (isCorrect != null)
    {
        <p class="result-text @(isCorrect == true ? "correct" : "wrong")">
            @(isCorrect == true ? "Correct!" : "Wrong, try again!")
        </p>
    }

    <div class="options-container">
        @foreach (var option in options)
        {
            <button @onclick="() => CheckAnswer(option)" class="option-button">
                @option
            </button>
        }
    </div>
</div>

<style>
    .fish-game-container {
        max-width: 100%;
        margin: 20px auto;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    .game-title {
        font-size: 1.8em;
        color: #333;
        margin-bottom: 20px;
    }

    .fish-image-container {
        margin-bottom: 20px;
    }

    .fish-image {
        width: 100%;
        max-width: 300px;
        height: auto;
        border-radius: 12px;
        border: 3px solid #eee;
    }

    .instruction-text {
        font-size: 1.2em;
        color: #555;
        margin-bottom: 20px;
    }

    .result-text {
        font-weight: bold;
        font-size: 1.5em;
        margin-bottom: 20px;
    }

        .result-text.correct {
            color: green;
        }

        .result-text.wrong {
            color: red;
        }

    .options-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: center;
    }

    .option-button {
        flex: 1 1 calc(100% - 20px);
        padding: 10px 20px;
        font-size: 16px;
        background-color: aquamarine;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        box-sizing: border-box;
    }

        .option-button:hover {
            background-color: #78dcca;
        }

    /* This ensures that the buttons adjust their size naturally without media queries */
    .option-button {
        flex: 1 1 100%; /* By default, buttons take full width on small screens */
    }

    .options-container {
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
    }

    .option-button {
        flex: 1 1 48%; /* Buttons will take nearly half the width on larger screens, with gap accounting for spacing */
        margin: 5px; /* Provides spacing between buttons */
    }
</style>

@code {
    private string correctAnswer;
    private string fishImage;
    private string[] options;
    private bool? isCorrect = null;

    private List<(string Image, string Answer, string[] Options)> fishData = new List<(string, string, string[])>
    {
        ("piggvar.jpg", "Piggvar", new[] { "Piggvar", "Laks", "Torsk", "Rødspætte", "Havørred" }),
        ("laks.jpg", "Laks", new[] { "Laks", "Torsk", "Piggvar", "Havørred", "Rødspætte" }),
        ("torsk.jpg", "Torsk", new[] { "Torsk", "Piggvar", "Rødspætte", "Laks", "Havørred" }),
        ("rødspætte.jpg", "Rødspætte", new[] { "Rødspætte", "Piggvar", "Torsk", "Havørred", "Laks" }),
        ("havørred.jpg", "Havørred", new[] { "Havørred", "Piggvar", "Rødspætte", "Laks", "Torsk" })
    };

    protected override void OnInitialized()
    {
        ChangeFish();
    }

    private async Task CheckAnswer(string selectedOption)
    {
        isCorrect = selectedOption == correctAnswer;
        StateHasChanged();

        await Task.Delay(2000);

        ChangeFish();
    }

    private void ChangeFish()
    {
        var random = new Random();
        var selectedFish = fishData[random.Next(fishData.Count)];
        fishImage = selectedFish.Image;
        correctAnswer = selectedFish.Answer;
        options = selectedFish.Options;
        isCorrect = null;

        StateHasChanged();
    }
}
